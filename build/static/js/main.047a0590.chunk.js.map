{"version":3,"sources":["services/moviesAPI.js","routes.js","components/MoviesList/MoviesList.js","components/HomePage/HomePage.js","components/SearchForm/SearchForm.js","components/MoviesPage/MoviesPage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["keyAPI","pathAPI","getMoviesByKeyword","keyword","fetch","then","res","json","data","results","withRouter","movies","match","map","item","to","routes","id","title","HomePage","state","setState","catch","error","this","className","Component","SearchForm","handleKeywordChange","event","target","value","toLowerCase","handleSubmit","preventDefault","trim","alert","props","formSubmit","onSubmit","type","placeholder","name","onChange","MoviesPage","handleFormSubmission","searchQuery","history","push","location","search","query","URLSearchParams","get","movieApi","prevProps","_prevState","prevQuery","nextQuery","Cast","cast","movieId","params","length","src","profile_path","alt","original_name","character","Reviews","reviews","author","content","MovieDetailsPage","movie","genres","goBack","bind","poster_path","vote_average","overview","release_date","onClick","url","exact","path","component","AppBar","activeClassName","App","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.047a0590.chunk.js","sourcesContent":["const keyAPI = \"ce2eb9dc8a268657dca33c0f3f4f0ac2\";\r\nconst pathAPI = \"https://api.themoviedb.org/3\";\r\n\r\n\r\n\r\nexport const imgPath = \"https://image.tmdb.org/t/p/w185\";\r\nexport const posterImgPath = `https://image.tmdb.org/t/p/w342/`;\r\n\r\n\r\n\r\nexport const getTrending = () => {\r\n  return fetch(`${pathAPI}/trending/movie/day?api_key=${keyAPI}`)\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\n\r\nexport const getMoviesByKeyword = (keyword) => {\r\n  return fetch(`${pathAPI}/search/movie?api_key=${keyAPI}&query=${keyword}`)\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\n\r\nexport const getMovieDetails = (movieId) => {\r\n  return fetch(`${pathAPI}/movie/${movieId}?api_key=${keyAPI}`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getMovieCast = (movieId) => {\r\n  return fetch(`${pathAPI}/movie/${movieId}/credits?api_key=${keyAPI}`)\r\n    .then((res) => res.json())\r\n    .then((data) => data.cast);\r\n};\r\n\r\nexport const getMovieReviews = (movieId) => {\r\n  return fetch(`${pathAPI}/movie/${movieId}/reviews?api_key=${keyAPI}`)\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\n","export default {\r\n    homePage: \"/\",\r\n    moviesPage: \"/movies\",\r\n    movieDetailsPage: \"/movies/:movieId\",\r\n    cast: \"/movies/:movieId/cast\",\r\n    reviews: \"/movies/:movieId/reviews\"\r\n}","import { Link, withRouter } from \"react-router-dom\";\r\n import routes from \"../../routes\"\r\n\r\n const MoviesList =({movies, match})=>{\r\n    return(\r\n        <ul>\r\n            {movies.map((item) => (\r\n              <li key={item.id}>\r\n                <Link to={`${routes.moviesPage}/${item.id}`}>{item.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n    )\r\n}\r\nexport default withRouter(MoviesList)","import { Component } from \"react\";\r\nimport \"./HomePage.css\";\r\n\r\nimport * as movieApi from \"../../services/moviesAPI\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    movieApi\r\n      .getTrending()\r\n      .then((data) => {\r\n        this.setState({\r\n          movies: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div className=\"HomePage\">{movies && <MoviesList movies={movies} />}</div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport \"./SearchForm.css\"\r\n\r\nexport default class SearchForm extends Component {\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    keyword: \"\",\r\n  };\r\n\r\n  handleKeywordChange = (event) => {\r\n    this.setState({ keyword: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.keyword.trim() === \"\") {\r\n      return alert(\"Введите слово для поиска\");\r\n    }\r\n\r\n    this.props.formSubmit(this.state.keyword);\r\n    this.setState({ keyword: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search movies\"\r\n          value={this.state.keyword}\r\n          name=\"search\"\r\n          onChange={this.handleKeywordChange}\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport \"./MoviesPage.css\";\r\n\r\nimport * as movieApi from \"../../services/moviesAPI\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nexport default class MoviesPage extends Component {\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search).get(\"query\");\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    movieApi\r\n      .getMoviesByKeyword(query)\r\n      .then((movies) => {\r\n        this.setState({\r\n          movies: movies,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState) {\r\n    const prevQuery = new URLSearchParams(prevProps.location.search).get(\r\n      \"query\"\r\n    );\r\n    const nextQuery = new URLSearchParams(this.props.location.search).get(\r\n      \"query\"\r\n    );\r\n\r\n    if (prevQuery === nextQuery) {\r\n      return;\r\n    }\r\n\r\n    movieApi\r\n      .getMoviesByKeyword(nextQuery)\r\n      .then((movies) => {\r\n        this.setState({\r\n          movies: movies,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  handleFormSubmission = (searchQuery) => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `query=${searchQuery}`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <SearchForm formSubmit={this.handleFormSubmission} />\r\n        {movies && <MoviesList movies={movies} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport \"./Cast.css\";\r\nimport * as movieApi from \"../../services/moviesAPI\";\r\n\r\nexport default class Cast extends Component {\r\n  state = { cast: [] };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n\r\n    movieApi\r\n      .getMovieCast(movieId)\r\n      .then((data) => {\r\n        this.setState({\r\n          cast: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    if (cast.length > 0) {\r\n      return (\r\n        <>\r\n          <ul>\r\n            {cast.map((item) => (\r\n              <li key={item.id} className=\"CastPageItem\">\r\n                <img src={`${movieApi.imgPath}${item.profile_path}`} alt=\"\" />\r\n                <h4>{item.original_name}</h4>\r\n                <p>Character: {item.character} </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      );\r\n    }\r\n    if (cast.length === 0) {\r\n      return <h2>No data found</h2>;\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport * as movieApi from \"../../services/moviesAPI\";\r\n\r\nexport default class Reviews extends Component {\r\n  state = { reviews: [] };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n    movieApi\r\n      .getMovieReviews(movieId)\r\n      .then((reviews) => {\r\n        this.setState({\r\n          reviews: reviews,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    if (reviews.length > 0) {\r\n      return (\r\n        <>\r\n          <ul>\r\n            {reviews.map((item) => (\r\n              <li key={item.id} className=\"\">\r\n                <h1>{item.author}</h1>\r\n                <p>{item.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      );\r\n    }\r\n    if (reviews.length === 0) {\r\n      return <h2>No data found</h2>;\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./MovieDetailsPage.css\";\r\n\r\nimport Cast from \"../Cast/Cast\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport * as movieApi from \"../../services/moviesAPI\";\r\nimport routes from \"../../routes\";\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: { genres: [] },\r\n  };\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n    movieApi.getMovieDetails(movieId).then((data) => {\r\n      this.setState({\r\n        movie: data,\r\n      });\r\n    });\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n  }\r\n  goBack() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      poster_path,\r\n      vote_average,\r\n      overview,\r\n      release_date,\r\n      genres,\r\n    } = this.state.movie;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.goBack}>\r\n          go back\r\n        </button>\r\n        <div className=\"DetailsPage\">\r\n          <img alt={title} src={`${movieApi.posterImgPath}${poster_path}`} />\r\n          <div className=\"DetailsPageAbout\">\r\n            <h2>\r\n              {title} ({release_date})\r\n            </h2>\r\n            <p>User score: {vote_average} </p>\r\n            <h3>Overview</h3>\r\n            <p>{overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul>\r\n              {genres.map((item) => (\r\n                <li key={item.id}>{item.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"AdditionalInformation\">\r\n          <p>Additional information</p>\r\n          <ul className=\"AdditionalInformationList\">\r\n            <li className=\"AdditionalInformationItem\">\r\n              <Link className=\"NavLink\" to={`${this.props.match.url}/cast`}>\r\n                Cast\r\n              </Link>\r\n            </li>\r\n            <li className=\"AdditionalInformationItem\">\r\n              <Link className=\"NavLink\" to={`${this.props.match.url}/reviews`}>\r\n                Reviews\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path={routes.cast} component={Cast} />\r\n          <Route exact path={routes.reviews} component={Reviews} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport{ NavLink } from \"react-router-dom\"\r\nimport routes from \"../../routes\"\r\n\r\nimport \"./AppBar.css\"\r\n \r\nconst AppBar=()=>{\r\n    return(\r\n        <header className=\"NavLinkBar\">\r\n      <NavLink\r\n        exact\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n        to={routes.homePage}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n        to={routes.moviesPage}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </header>\r\n    )\r\n}\r\nexport default AppBar","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n\nimport \"./App.css\"\nimport HomePage from \"./components/HomePage/HomePage\";\nimport MoviesPage from \"./components/MoviesPage/MoviesPage\";\nimport MovieDetailsPage from \"./components/MovieDetailsPage/MovieDetailsPage\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport routes from \"./routes\";\n\nconst App = () => (\n  <>\n    <AppBar />\n    <Switch>\n      <Route exact path={routes.homePage} component={HomePage} />\n      <Route exact path={routes.moviesPage} component={MoviesPage} />\n      <Route path={routes.movieDetailsPage} component={MovieDetailsPage} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDom.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}